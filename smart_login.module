<?php

/**
 * @file
 * Smart Login functionalities.
 *
 * Inspired by IN2PIRE (contact@inspire.vn).
 */

/**
 * Implements hook_menu().
 */
function smart_login_menu() {
  $items['admin/login'] = array(
    'title' => 'Log in',
    'page callback' => 'smart_login_admin_login_page',
    'access callback' => TRUE,
    'theme callback' => 'smart_login_theme_callback',
    'file' => 'smart_login.pages.inc',
    'menu_name' => 'navigation',
    'type' => MENU_CALLBACK,
  );

  $items['admin/password'] = array(
    'title' => 'Request new password',
    'page callback' => 'smart_login_admin_password_page',
    'access callback' => TRUE,
    'theme callback' => 'smart_login_theme_callback',
    'file' => 'smart_login.pages.inc',
    'menu_name' => 'navigation',
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/system/smart-login'] = array(
    'title' => 'Smart Login',
    'description' => 'Smart Login settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('smart_login_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'smart_login.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_menu_alter().
 */
function smart_login_menu_alter(&$items) {
  $module_info = array(
    'module' => 'smart_login',
    'file' => 'smart_login.pages.inc',
    'file path' => drupal_get_path('module', 'smart_login'),
  );

  $items['error/403'] = $module_info + array(
    'title' => 'Error 403',
    'page callback' => 'smart_login_error_403_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
}

/**
 * Get admin theme for smart login.
 */
function smart_login_get_admin_theme() {
  static $theme = NULL;

  if (NULL === $theme) {
    $theme = variable_get('smart_login_admin_theme', 'theme:admin');

    switch ($theme) {
      case 'theme:admin':
        $theme = variable_get('admin_theme', 'seven');
        break;

      case 'theme:default':
        $theme = variable_get('theme_default', 'bartik');
        break;
    }
  }

  return $theme;
}

/**
 * Theme callback for admin login and password page.
 */
function smart_login_theme_callback() {
  return smart_login_get_admin_theme();
}

/**
 * Get destination for smart login.
 */
function smart_login_destination($path = NULL) {
  $destination = isset($_GET['destination']) ? array('destination' => $_GET['destination']) : NULL;

  if (empty($path)) {
    $path = current_path();
  }

  if (path_is_admin($path)) {
    // Backend.
    $defaul_variable = 'smart_login_admin_destination';
    $default_path = 'admin';
  }
  else {
    // Frontend.
    $defaul_variable = 'smart_login_front_destination';
    $default_path = 'user';
  }

  if (empty($destination)) {
    $destination['destination'] = variable_get($defaul_variable, $default_path);
  }

  if ($destination['destination'] == 'user/login' || $destination['destination'] == 'admin/login') {
    $destination['destination'] = $default_path;
  }

  return $destination;
}

/**
 * Alter form and inject css.
 */
function _smart_login_form_alter(&$form, &$form_state) {
  $admin_theme = smart_login_get_admin_theme();
  $css_file = drupal_get_path('module', 'smart_login') . '/css/' . $admin_theme . '.css';

  if (file_exists($css_file)) {
    $form['#attached']['css'][$css_file] = array(
      'type' => 'file',
      'group' => CSS_THEME,
      'weight' => 1000,
    );
  }
}

/**
 * Alter user_login_block() form.
 *
 * @see user_login_block()
 * @see smart_login_user_login_submit()
 */
function smart_login_form_user_login_block_alter(&$form, &$form_state) {
  $form['#submit'][] = 'smart_login_user_login_submit';
}

/**
 * Alter user_login() form.
 *
 * @see user_login()
 * @see smart_login_user_login_submit()
 */
function smart_login_form_user_login_alter(&$form, &$form_state) {
  $form['#submit'][] = 'smart_login_user_login_submit';

  if (!path_is_admin(current_path())) {
    return;
  }

  _smart_login_form_alter($form, $form_state);

  $form['actions']['link'] = array(
    '#type' => 'link',
    '#title' => t('Forgot password?'),
    '#href' => 'admin/password',
  );
}

/**
 * Submit handler.
 *
 * @see smart_login_form_user_login_alter()
 */
function smart_login_user_login_submit($form, &$form_state) {
  $form_state['redirect'] = smart_login_destination();
}

/**
 * Alter user_pass() form.
 *
 * @see user_pass()
 * @see smart_login_user_pass_submit()
 */
function smart_login_form_user_pass_alter(&$form, &$form_state) {
  if (!path_is_admin(current_path())) {
    return;
  }

  _smart_login_form_alter($form, $form_state);

  $form['actions']['link'] = array(
    '#type' => 'link',
    '#title' => t('Login'),
    '#href' => 'admin/login',
  );

  $form['#submit'][] = 'smart_login_user_pass_submit';
}

/**
 * Submit handler.
 *
 * @see smart_login_form_user_pass_alter()
 * @see smart_login_form_user_login_block_alter()
 */
function smart_login_user_pass_submit(&$form, &$form_state) {
  $form_state['redirect'] = 'admin/login';
}

/**
 * Alter system_site_information_settings() form.
 */
function smart_login_form_system_site_information_settings_alter(&$form, &$form_state) {
  $form['error_page']['site_403']['#weight'] = 1;
  $form['error_page']['site_404']['#weight'] = 2;

  $form['error_page']['smart_login_site_403'] = $form['error_page']['site_403'];

  $site_403 = &$form['error_page']['smart_login_site_403'];
  $site_403['#default_value'] = variable_get('smart_login_site_403', '');

  unset($site_403);
  unset($form['error_page']['site_403']);
}
